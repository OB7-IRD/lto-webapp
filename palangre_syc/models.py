from django.db import models

class common_lightstickstype(models.Model):
    common_lightstickstype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class landing_conservation(models.Model):
    landing_conservation_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_settingshape(models.Model):
    common_settingshape_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_sensordataformat(models.Model):
    observation_sensordataformat_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_hookposition(models.Model):
    observation_hookposition_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_hooksize(models.Model):
    common_hooksize_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_stomachfullness(models.Model):
    observation_stomachfullness_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_sensorbrand(models.Model):
    observation_sensorbrand_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    brandname = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
    
class common_onboardprocessing(models.Model):
    common_onboardprocessing_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_encountertype(models.Model):
    observation_encountertype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_healthstatus(models.Model):
    common_healthstatus_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_baithaulingstatus(models.Model):
    observation_baithaulingstatus_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_observationmethod(models.Model):
    common_observationmethod_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_itemverticalposition(models.Model):
    observation_itemverticalposition_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_sensortype(models.Model):
    observation_sensortype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_mitigationtype(models.Model):
    common_mitigationtype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_triptype(models.Model):
    common_triptype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_maturitystatus(models.Model):
    observation_maturitystatus_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    uppervalue = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    lowervalue = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_baitsettingstatus(models.Model):
    common_baitsettingstatus_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_baittype(models.Model):
    common_baittype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_catchfate(models.Model):
    common_catchfate_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    observation = models.BooleanField()
    logbook = models.BooleanField()
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_linetype(models.Model):
    common_linetype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class observation_itemhorizontalposition(models.Model):
    observation_itemhorizontalposition_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class landing_datasource(models.Model):
    landing_datasource_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_hooktype(models.Model):
    common_hooktype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_program(models.Model):
    common_program_id = models.AutoField(primary_key=True)
    code = models.CharField(max_length=100)
    organism = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    observation = models.BooleanField()
    logbook = models.BooleanField()
    startdate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    status = models.CharField(max_length=100)
    
    
class common_vesselactivity(models.Model):
    common_vesselactivity_id = models.AutoField(primary_key=True)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    observation = models.BooleanField()
    logbook = models.BooleanField()
    allowset = models.BooleanField()
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    status = models.CharField(max_length=100)
    
    
class landing_company(models.Model):
    landing_company_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    homeid = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_lightstickscolor(models.Model):
    common_lightstickscolor_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
    
class common_gearcharacteristiclistitem(models.Model):
    common_gearcharacteristiclistitem_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    gearcharacteristic = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_gear(models.Model):
    common_gear_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    allowedgearcharacteristic = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    defaultgearcharacteristic = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_dataquality(models.Model):
    common_dataquality_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_wind(models.Model):
    common_wind_id = models.AutoField(primary_key=True)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    maxspeed = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    minswellheight = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    maxswellheight = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_shipowner(models.Model):
    common_shipowner_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_speciesgroup(models.Model):
    common_speciesgroup_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    speciesgroupreleasemode = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_vessel(models.Model):
    common_vessel_id = models.AutoField(primary_key=True)
    code = models.CharField(max_length=100)
    keelcode = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    length = models.CharField(max_length=100)
    vesselsizecategory = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    shipowner = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    capacity = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    yearservice = models.IntegerField()
    flagcountry = models.CharField(max_length=100)
    fleetcountry = models.CharField(max_length=100)
    powercv = models.IntegerField()
    comment = models.CharField(max_length=100)
    vesseltype = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_gearcharacteristic(models.Model):
    common_gearcharacteristic_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    gearcharacteristictype = models.CharField(max_length=100)
    unit = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_vesselsizecategory(models.Model):
    common_vesselsizecategory_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    gaugelabel = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    capacitylabel = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_sex(models.Model):
    common_sex_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_gearcharacteristictype(models.Model):
    common_gearcharacteristictype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_sizemeasuremethod(models.Model):
    common_sizemeasuremethod_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_ocean(models.Model):
    common_ocean_id = models.AutoField(primary_key=True)
    southwestallowed = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    northeastallowed = models.BooleanField()
    southeastallowed = models.BooleanField()
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    northwestallowed = models.BooleanField()
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    status = models.CharField(max_length=100)
    
class common_species(models.Model):
    common_species_id = models.AutoField(primary_key=True)
    minlength = models.CharField(max_length=100)
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    maxlength = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    weightmeasuretype = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    faocode = models.CharField(max_length=100)
    maxweight = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    sizemeasuretype = models.CharField(max_length=100)
    ocean = models.CharField(max_length=100)
    minweight = models.CharField(max_length=100)
    scientificlabel = models.CharField(max_length=100)
    speciesgroup = models.CharField(max_length=100)
    homeid = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_fpazone(models.Model):
    common_fpazone_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    country = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    homeid = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_harbour(models.Model):
    common_harbour_id = models.AutoField(primary_key=True)
    country = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    locode = models.CharField(max_length=100)
    latitude = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    status = models.CharField(max_length=100)
    longitude = models.CharField(max_length=100)
    
class common_sizemeasuretype(models.Model):
    common_sizemeasuretype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_specieslist(models.Model):
    common_specieslist_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    species = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_person(models.Model):
    common_person_id = models.AutoField(primary_key=True)
    country = models.CharField(max_length=100)
    firstname = models.CharField(max_length=100)
    code = models.IntegerField()
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    captain = models.BooleanField()
    lastname = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    observer = models.BooleanField()
    datasource = models.BooleanField()
    pssampler = models.BooleanField()
    dataentryoperator = models.BooleanField()
    status = models.CharField(max_length=100)
    
class common_weightmeasuremethod(models.Model):
    common_weightmeasuremethod_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_weightmeasuretype(models.Model):
    common_weightmeasuretype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_country(models.Model):
    common_country_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    iso3code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    iso2code = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_lengthweightparameter(models.Model):
    common_lengthweightparameter_id = models.AutoField(primary_key=True)
    weightlengthformula = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    sex = models.CharField(max_length=100)
    meanweight = models.CharField(max_length=100)
    source = models.CharField(max_length=100)
    startdate = models.CharField(max_length=100)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    sizemeasuretype = models.CharField(max_length=100)
    ocean = models.CharField(max_length=100)
    species = models.CharField(max_length=100)
    lengthweightformula = models.CharField(max_length=100)
    coefficients = models.CharField(max_length=100)
    meanlength = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    
class common_organism(models.Model):
    common_organism_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    country = models.CharField(max_length=100)
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_speciesgroupreleasemode(models.Model):
    common_speciesgroupreleasemode_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)
    
class common_vesseltype(models.Model):
    common_vesseltype_id = models.AutoField(primary_key=True)
    topiaid = models.CharField(max_length=100)
    needcomment = models.BooleanField()
    code = models.CharField(max_length=100)
    lastupdatedate = models.CharField(max_length=100)
    topiacreatedate = models.CharField(max_length=100)
    label1 = models.CharField(max_length=100)
    label2 = models.CharField(max_length=100)
    status = models.CharField(max_length=100)
    label3 = models.CharField(max_length=100)